// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrlShortener.Infrastructure.Contexts;

namespace UrlShortener.WebApi.Infrastructure.Migrations
{
    [DbContext(typeof(UrlShortenerContext))]
    [Migration("20190104001404_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:core.UrlDetailsSeq", "'UrlDetailsSeq', 'core', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:core.UrlRequestSeq", "'UrlRequestSeq', 'core', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:core.UrlSeq", "'UrlSeq', 'core', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UrlShortener.Domain.Aggregates.UrlAggregate.Url", b =>
                {
                    b.Property<int>("Id")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "UrlSeq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "core")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("LongUrl")
                        .IsRequired()
                        .HasMaxLength(2083);

                    b.Property<string>("ShortUrl")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("ShortUrl")
                        .IsUnique();

                    b.ToTable("Url","core");
                });

            modelBuilder.Entity("UrlShortener.Domain.Aggregates.UrlAggregate.UrlDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "UrlDetailsSeq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "core")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<int>("RequestCount");

                    b.Property<int>("UrlId");

                    b.HasKey("Id");

                    b.ToTable("UrlDetails","core");
                });

            modelBuilder.Entity("UrlShortener.Domain.Aggregates.UrlAggregate.UrlRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "UrlRequestSeq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "core")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<DateTimeOffset>("AccessedOn")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<int>("UrlId");

                    b.HasKey("Id");

                    b.HasIndex("UrlId");

                    b.ToTable("UrlRequest","core");
                });

            modelBuilder.Entity("UrlShortener.Domain.Aggregates.UrlAggregate.Url", b =>
                {
                    b.HasOne("UrlShortener.Domain.Aggregates.UrlAggregate.UrlDetails", "UrlDetails")
                        .WithOne("Url")
                        .HasForeignKey("UrlShortener.Domain.Aggregates.UrlAggregate.Url", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UrlShortener.Domain.Aggregates.UrlAggregate.UrlRequest", b =>
                {
                    b.HasOne("UrlShortener.Domain.Aggregates.UrlAggregate.Url")
                        .WithMany("UrlRequests")
                        .HasForeignKey("UrlId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
